{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART, DELETE_ITEM_CART } from \"../../share/constants/action-types\";\nconst initState = {\n  items: []\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addToCart(state, action.payload);\n\n    case UPDATE_CART:\n      return updateCart(state, action.payload);\n\n    case DELETE_ITEM_CART:\n      const newCarts = state.items.filter(item => item.id !== action.payload.id);\n      return { ...state,\n        items: newCarts\n      };\n\n    default:\n      return state;\n  }\n});\n\nconst addToCart = (state, payload) => {\n  const items = state.items;\n  let isProductExists = false;\n  items.map(item => {\n    if (item.id === payload.id) {\n      item.qty += payload.qty;\n      isProductExists = true;\n    }\n\n    return item;\n  });\n  const newItems = isProductExists ? items : [...items, payload];\n  localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\n  return { ...state,\n    items: newItems\n  };\n};\n\nconst updateCart = (state, payload) => {\n  // console.log({ payload });\n  const items = state.items;\n  const {\n    id,\n    qty\n  } = payload;\n  const newCarts = items.map(item => {\n    if (item.id === id) {\n      item.qty = qty;\n    }\n\n    return item;\n  });\n  return { ...state,\n    items: newCarts\n  };\n};","map":{"version":3,"sources":["/Users/phamtrungtuyen/Projective/project_001/src/reduxSetup/reducers/cart.js"],"names":["ADD_TO_CART","UPDATE_CART","DELETE_ITEM_CART","initState","items","state","action","type","addToCart","payload","updateCart","newCarts","filter","item","id","isProductExists","map","qty","newItems","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,oCAJP;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAAlB,C,CAIA;;AACA,gBAAe,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,aAAOQ,SAAS,CAACH,KAAD,EAAQC,MAAM,CAACG,OAAf,CAAhB;;AACF,SAAKR,WAAL;AACE,aAAOS,UAAU,CAACL,KAAD,EAAQC,MAAM,CAACG,OAAf,CAAjB;;AACF,SAAKP,gBAAL;AACE,YAAMS,QAAQ,GAAGN,KAAK,CAACD,KAAN,CAAYQ,MAAZ,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EADtB,CAAjB;AAGA,aAAO,EAAE,GAAGT,KAAL;AAAYD,QAAAA,KAAK,EAAEO;AAAnB,OAAP;;AACF;AACE,aAAON,KAAP;AAXJ;AAaD,CAdD;;AAgBA,MAAMG,SAAS,GAAG,CAACH,KAAD,EAAQI,OAAR,KAAoB;AACpC,QAAML,KAAK,GAAGC,KAAK,CAACD,KAApB;AACA,MAAIW,eAAe,GAAG,KAAtB;AACAX,EAAAA,KAAK,CAACY,GAAN,CAAWH,IAAD,IAAU;AAClB,QAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAAxB,EAA4B;AAC1BD,MAAAA,IAAI,CAACI,GAAL,IAAYR,OAAO,CAACQ,GAApB;AACAF,MAAAA,eAAe,GAAG,IAAlB;AACD;;AACD,WAAOF,IAAP;AACD,GAND;AAOA,QAAMK,QAAQ,GAAGH,eAAe,GAAGX,KAAH,GAAW,CAAC,GAAGA,KAAJ,EAAWK,OAAX,CAA3C;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAnC;AACA,SAAO,EAAE,GAAGb,KAAL;AAAYD,IAAAA,KAAK,EAAEc;AAAnB,GAAP;AACD,CAbD;;AAeA,MAAMR,UAAU,GAAG,CAACL,KAAD,EAAQI,OAAR,KAAoB;AACrC;AACA,QAAML,KAAK,GAAGC,KAAK,CAACD,KAApB;AACA,QAAM;AAAEU,IAAAA,EAAF;AAAMG,IAAAA;AAAN,MAAcR,OAApB;AAEA,QAAME,QAAQ,GAAGP,KAAK,CAACY,GAAN,CAAWH,IAAD,IAAU;AACnC,QAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClBD,MAAAA,IAAI,CAACI,GAAL,GAAWA,GAAX;AACD;;AACD,WAAOJ,IAAP;AACD,GALgB,CAAjB;AAMA,SAAO,EAAE,GAAGR,KAAL;AAAYD,IAAAA,KAAK,EAAEO;AAAnB,GAAP;AACD,CAZD","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  UPDATE_CART,\r\n  DELETE_ITEM_CART,\r\n} from \"../../share/constants/action-types\";\r\nconst initState = {\r\n  items: [],\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return addToCart(state, action.payload);\r\n    case UPDATE_CART:\r\n      return updateCart(state, action.payload);\r\n    case DELETE_ITEM_CART:\r\n      const newCarts = state.items.filter(\r\n        (item) => item.id !== action.payload.id\r\n      );\r\n      return { ...state, items: newCarts };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addToCart = (state, payload) => {\r\n  const items = state.items;\r\n  let isProductExists = false;\r\n  items.map((item) => {\r\n    if (item.id === payload.id) {\r\n      item.qty += payload.qty;\r\n      isProductExists = true;\r\n    }\r\n    return item;\r\n  });\r\n  const newItems = isProductExists ? items : [...items, payload];\r\n  localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\r\n  return { ...state, items: newItems };\r\n};\r\n\r\nconst updateCart = (state, payload) => {\r\n  // console.log({ payload });\r\n  const items = state.items;\r\n  const { id, qty } = payload;\r\n\r\n  const newCarts = items.map((item) => {\r\n    if (item.id === id) {\r\n      item.qty = qty;\r\n    }\r\n    return item;\r\n  });\r\n  return { ...state, items: newCarts };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}