{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART, DELETE_ITEM_CART } from \"./action-types\";\nconst initState = {\n  items: []\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addToCart(state, action.payload);\n\n    case UPDATE_CART:\n      return updateCart(state, action.payload);\n\n    case DELETE_ITEM_CART:\n      const newCarts = state.items.filter(item => item._id !== action.payload.id);\n      return { ...state,\n        items: newCarts\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst addToCart = (state, payload) => {\n  const items = state.items;\n  let isProductExists = false;\n  items.map(item => {\n    if (item._id === payload._id) {\n      item.qty += payload.qty;\n      isProductExists = true;\n    }\n\n    return item;\n  });\n  const newItems = isProductExists ? items : [...items, payload]; // localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\n\n  return { ...state,\n    items: newItems\n  };\n};\n\nconst updateCart = (state, payload) => {\n  // console.log({ payload });\n  const items = state.items;\n  const {\n    id,\n    qty\n  } = payload;\n  const newCarts = items.map(item => {\n    if (item._id === id) {\n      item.qty = qty;\n    }\n\n    return item;\n  });\n  return { ...state,\n    items: newCarts\n  };\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/phamtrungtuyen/Projective/Phone_test/src/reduxSetup/reducers/cart.js"],"names":["ADD_TO_CART","UPDATE_CART","DELETE_ITEM_CART","initState","items","cartReducer","state","action","type","addToCart","payload","updateCart","newCarts","filter","item","_id","id","isProductExists","map","qty","newItems"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,gBAAnC,QAA2D,gBAA3D;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAAlB,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,aAAOS,SAAS,CAACH,KAAD,EAAQC,MAAM,CAACG,OAAf,CAAhB;;AACF,SAAKT,WAAL;AACE,aAAOU,UAAU,CAACL,KAAD,EAAQC,MAAM,CAACG,OAAf,CAAjB;;AACF,SAAKR,gBAAL;AACE,YAAMU,QAAQ,GAAGN,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACdC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeM,EADvB,CAAjB;AAGA,aAAO,EAAE,GAAGV,KAAL;AAAYF,QAAAA,KAAK,EAAEQ;AAAnB,OAAP;;AACF;AACE,aAAON,KAAP;AAXJ;AAaD,CAdD;;AAgBA,MAAMG,SAAS,GAAG,CAACH,KAAD,EAAQI,OAAR,KAAoB;AACpC,QAAMN,KAAK,GAAGE,KAAK,CAACF,KAApB;AACA,MAAIa,eAAe,GAAG,KAAtB;AACAb,EAAAA,KAAK,CAACc,GAAN,CAAWJ,IAAD,IAAU;AAClB,QAAIA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAAzB,EAA8B;AAC5BD,MAAAA,IAAI,CAACK,GAAL,IAAYT,OAAO,CAACS,GAApB;AACAF,MAAAA,eAAe,GAAG,IAAlB;AACD;;AACD,WAAOH,IAAP;AACD,GAND;AAOA,QAAMM,QAAQ,GAAGH,eAAe,GAAGb,KAAH,GAAW,CAAC,GAAGA,KAAJ,EAAWM,OAAX,CAA3C,CAVoC,CAWpC;;AACA,SAAO,EAAE,GAAGJ,KAAL;AAAYF,IAAAA,KAAK,EAAEgB;AAAnB,GAAP;AACD,CAbD;;AAeA,MAAMT,UAAU,GAAG,CAACL,KAAD,EAAQI,OAAR,KAAoB;AACrC;AACA,QAAMN,KAAK,GAAGE,KAAK,CAACF,KAApB;AACA,QAAM;AAAEY,IAAAA,EAAF;AAAMG,IAAAA;AAAN,MAAcT,OAApB;AAEA,QAAME,QAAQ,GAAGR,KAAK,CAACc,GAAN,CAAWJ,IAAD,IAAU;AACnC,QAAIA,IAAI,CAACC,GAAL,KAAaC,EAAjB,EAAqB;AACnBF,MAAAA,IAAI,CAACK,GAAL,GAAWA,GAAX;AACD;;AACD,WAAOL,IAAP;AACD,GALgB,CAAjB;AAMA,SAAO,EAAE,GAAGR,KAAL;AAAYF,IAAAA,KAAK,EAAEQ;AAAnB,GAAP;AACD,CAZD;;AAcA,eAAeP,WAAf","sourcesContent":["import { ADD_TO_CART, UPDATE_CART, DELETE_ITEM_CART } from \"./action-types\";\r\nconst initState = {\r\n  items: [],\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst cartReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return addToCart(state, action.payload);\r\n    case UPDATE_CART:\r\n      return updateCart(state, action.payload);\r\n    case DELETE_ITEM_CART:\r\n      const newCarts = state.items.filter(\r\n        (item) => item._id !== action.payload.id\r\n      );\r\n      return { ...state, items: newCarts };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addToCart = (state, payload) => {\r\n  const items = state.items;\r\n  let isProductExists = false;\r\n  items.map((item) => {\r\n    if (item._id === payload._id) {\r\n      item.qty += payload.qty;\r\n      isProductExists = true;\r\n    }\r\n    return item;\r\n  });\r\n  const newItems = isProductExists ? items : [...items, payload];\r\n  // localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\r\n  return { ...state, items: newItems };\r\n};\r\n\r\nconst updateCart = (state, payload) => {\r\n  // console.log({ payload });\r\n  const items = state.items;\r\n  const { id, qty } = payload;\r\n\r\n  const newCarts = items.map((item) => {\r\n    if (item._id === id) {\r\n      item.qty = qty;\r\n    }\r\n    return item;\r\n  });\r\n  return { ...state, items: newCarts };\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}