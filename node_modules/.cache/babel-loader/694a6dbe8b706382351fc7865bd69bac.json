{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART, DELETE_ITEM_CART, CHANGE_CARD, NEW_PRODUCT, ERROR_CART } from \"./action-types\";\nimport { getProduct } from \"../../servicers/Api\";\nexport const addCart = (id, title, image, price) => {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      id,\n      title,\n      image,\n      price,\n      qty: 1\n    }\n  };\n};\nexport const updateCart = (id, qty) => {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      qty\n    }\n  };\n};\nexport const changeCard = (id, qty) => {\n  return {\n    type: CHANGE_CARD,\n    payload: {\n      id,\n      qty\n    }\n  };\n};\nexport const deleteCart = id => {\n  return {\n    type: DELETE_ITEM_CART,\n    payload: {\n      id\n    }\n  };\n}; // const API = (id) => {\n//   return getProduct(id);\n// };\n\nexport const testThunk = id => {\n  return function (dispatch) {\n    return getProduct(id).then(res => {\n      // console.log(res.data);\n      dispatch(newProduct(res.data));\n    }); // .catch((error) => dispatch(errorCart()));\n    // .catch((error) => {\n    //   // Error ðŸ˜¨\n    //   if (error.response) {\n    //     /*\n    //      * The request was made and the server responded with a\n    //      * status code that falls out of the range of 2xx\n    //      */\n    //     console.log(error.response.data);\n    //     console.log(error.response.status);\n    //     console.log(error.response.headers);\n    //   } else if (error.request) {\n    //     /*\n    //      * The request was made but no response was received, `error.request`\n    //      * is an instance of XMLHttpRequest in the browser and an instance\n    //      * of http.ClientRequest in Node.js\n    //      */\n    //     console.log(error.request);\n    //   } else {\n    //     // Something happened in setting up the request and triggered an Error\n    //     console.log(\"Error\", error.message);\n    //   }\n    //   console.log(error.config);\n    // })\n  };\n};\nexport const newProduct = item => {\n  console.log(\"item\");\n  return {\n    type: NEW_PRODUCT,\n    item\n  };\n};\nexport const errorCart = () => {\n  // console.log(\"12321\");\n  return {\n    type: ERROR_CART\n  };\n};","map":{"version":3,"sources":["/Users/phamtrungtuyen/Projective/Phone_test/src/redux/reducers/action.js"],"names":["ADD_TO_CART","UPDATE_CART","DELETE_ITEM_CART","CHANGE_CARD","NEW_PRODUCT","ERROR_CART","getProduct","addCart","id","title","image","price","type","payload","qty","updateCart","changeCard","deleteCart","testThunk","dispatch","then","res","newProduct","data","item","console","log","errorCart"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,UANF,QAOO,gBAPP;AAQA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBC,KAAnB,KAA6B;AAClD,SAAO;AACLC,IAAAA,IAAI,EAAEZ,WADD;AAELa,IAAAA,OAAO,EAAE;AACPL,MAAAA,EADO;AAEPC,MAAAA,KAFO;AAGPC,MAAAA,KAHO;AAIPC,MAAAA,KAJO;AAKPG,MAAAA,GAAG,EAAE;AALE;AAFJ,GAAP;AAUD,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAG,CAACP,EAAD,EAAKM,GAAL,KAAa;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAEX,WADD;AAELY,IAAAA,OAAO,EAAE;AACPL,MAAAA,EADO;AAEPM,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAG,CAACR,EAAD,EAAKM,GAAL,KAAa;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAET,WADD;AAELU,IAAAA,OAAO,EAAE;AACPL,MAAAA,EADO;AAEPM,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIT,EAAD,IAAQ;AAChC,SAAO;AACLI,IAAAA,IAAI,EAAEV,gBADD;AAELW,IAAAA,OAAO,EAAE;AACPL,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM,C,CASP;AACA;AACA;;AAEA,OAAO,MAAMU,SAAS,GAAIV,EAAD,IAAQ;AAC/B,SAAO,UAAUW,QAAV,EAAoB;AACzB,WAAOb,UAAU,CAACE,EAAD,CAAV,CAAeY,IAAf,CAAqBC,GAAD,IAAS;AAClC;AACAF,MAAAA,QAAQ,CAACG,UAAU,CAACD,GAAG,CAACE,IAAL,CAAX,CAAR;AACD,KAHM,CAAP,CADyB,CAKzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA7BD;AA8BD,CA/BM;AAiCP,OAAO,MAAMD,UAAU,GAAIE,IAAD,IAAU;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO;AACLd,IAAAA,IAAI,EAAER,WADD;AAELoB,IAAAA;AAFK,GAAP;AAID,CANM;AAQP,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC7B;AACA,SAAO;AACLf,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CALM","sourcesContent":["import {\n  ADD_TO_CART,\n  UPDATE_CART,\n  DELETE_ITEM_CART,\n  CHANGE_CARD,\n  NEW_PRODUCT,\n  ERROR_CART,\n} from \"./action-types\";\nimport { getProduct } from \"../../servicers/Api\";\n\nexport const addCart = (id, title, image, price) => {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      id,\n      title,\n      image,\n      price,\n      qty: 1,\n    },\n  };\n};\n\nexport const updateCart = (id, qty) => {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      qty,\n    },\n  };\n};\n\nexport const changeCard = (id, qty) => {\n  return {\n    type: CHANGE_CARD,\n    payload: {\n      id,\n      qty,\n    },\n  };\n};\n\nexport const deleteCart = (id) => {\n  return {\n    type: DELETE_ITEM_CART,\n    payload: {\n      id,\n    },\n  };\n};\n\n// const API = (id) => {\n//   return getProduct(id);\n// };\n\nexport const testThunk = (id) => {\n  return function (dispatch) {\n    return getProduct(id).then((res) => {\n      // console.log(res.data);\n      dispatch(newProduct(res.data));\n    });\n    // .catch((error) => dispatch(errorCart()));\n    // .catch((error) => {\n    //   // Error ðŸ˜¨\n    //   if (error.response) {\n    //     /*\n    //      * The request was made and the server responded with a\n    //      * status code that falls out of the range of 2xx\n    //      */\n    //     console.log(error.response.data);\n    //     console.log(error.response.status);\n    //     console.log(error.response.headers);\n    //   } else if (error.request) {\n    //     /*\n    //      * The request was made but no response was received, `error.request`\n    //      * is an instance of XMLHttpRequest in the browser and an instance\n    //      * of http.ClientRequest in Node.js\n    //      */\n    //     console.log(error.request);\n    //   } else {\n    //     // Something happened in setting up the request and triggered an Error\n    //     console.log(\"Error\", error.message);\n    //   }\n    //   console.log(error.config);\n    // })\n  };\n};\n\nexport const newProduct = (item) => {\n  console.log(\"item\");\n  return {\n    type: NEW_PRODUCT,\n    item,\n  };\n};\n\nexport const errorCart = () => {\n  // console.log(\"12321\");\n  return {\n    type: ERROR_CART,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}