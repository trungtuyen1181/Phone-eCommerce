{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { ADD_TO_CART, UPDATE_CART, DELETE_ITEM_CART, CHANGE_CARD, NEW_PRODUCT, ERROR_CART } from \"./action-types\";\nimport { getProduct } from \"../../servicers/Api\"; // export const addCart = (id, title, image, price) => {\n//   return {\n//     type: ADD_TO_CART,\n//     payload: {\n//       id,\n//       title,\n//       image,\n//       price,\n//       qty: 1,\n//     },\n//   };\n// };\n\nexport const updateCart = (id, qty) => {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      qty\n    }\n  };\n};\nexport const changeCard = (id, qty) => {\n  return {\n    type: CHANGE_CARD,\n    payload: {\n      id,\n      qty\n    }\n  };\n};\nexport const deleteCart = id => {\n  return {\n    type: DELETE_ITEM_CART,\n    payload: {\n      id\n    }\n  };\n}; // const API = (id) => {\n//   return getProduct(id);\n// };\n\nexport const testThunk = id => {\n  return function (dispatch) {\n    return getProduct(id).then(res => {\n      const persons = res.data; // console.log(persons);\n\n      dispatch(newProduct(persons));\n    }).catch(() => dispatch(errorCart()));\n  };\n};\nexport const newProduct = item => {\n  // console.log(\"item\");\n  return {\n    type: NEW_PRODUCT,\n    item\n  };\n};\nexport const errorCart = () => {\n  // console.log(\"12131\");\n  return {\n    type: ERROR_CART\n  };\n};\n\nconst addCart = (state, payload) => {\n  const items = state.items;\n  let isProductExists = false;\n  items.map(item => {\n    if (!isProductExists && item.id === payload.id) {\n      item.qty += payload.qty;\n      isProductExists = true;\n    }\n\n    return item;\n  });\n  const newItems = isProductExists ? items : [...items, payload];\n  localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\n  return { ...state,\n    items: newItems\n  };\n};\n\nconst product = useSelector(state => {\n  // console.log(state.Cart);\n  return state.Cart.items;\n});\n\nconst addToCart = () => {\n  if (product) {\n    const {\n      id,\n      title,\n      image,\n      price\n    } = product;\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        title,\n        image,\n        price,\n        qty: 1\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/phamtrungtuyen/Projective/Phone_test/src/redux/reducers/action.js"],"names":["useSelector","ADD_TO_CART","UPDATE_CART","DELETE_ITEM_CART","CHANGE_CARD","NEW_PRODUCT","ERROR_CART","getProduct","updateCart","id","qty","type","payload","changeCard","deleteCart","testThunk","dispatch","then","res","persons","data","newProduct","catch","errorCart","item","addCart","state","items","isProductExists","map","newItems","localStorage","setItem","JSON","stringify","product","Cart","addToCart","title","image","price"],"mappings":"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","sourcesContent":["import { useSelector } from \"react-redux\";\n\nimport {\n  ADD_TO_CART,\n  UPDATE_CART,\n  DELETE_ITEM_CART,\n  CHANGE_CARD,\n  NEW_PRODUCT,\n  ERROR_CART,\n} from \"./action-types\";\nimport { getProduct } from \"../../servicers/Api\";\n\n// export const addCart = (id, title, image, price) => {\n//   return {\n//     type: ADD_TO_CART,\n//     payload: {\n//       id,\n//       title,\n//       image,\n//       price,\n//       qty: 1,\n//     },\n//   };\n// };\n\nexport const updateCart = (id, qty) => {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      qty,\n    },\n  };\n};\n\nexport const changeCard = (id, qty) => {\n  return {\n    type: CHANGE_CARD,\n    payload: {\n      id,\n      qty,\n    },\n  };\n};\n\nexport const deleteCart = (id) => {\n  return {\n    type: DELETE_ITEM_CART,\n    payload: {\n      id,\n    },\n  };\n};\n\n// const API = (id) => {\n//   return getProduct(id);\n// };\n\nexport const testThunk = (id) => {\n  return function (dispatch) {\n    return getProduct(id)\n      .then((res) => {\n        const persons = res.data;\n        // console.log(persons);\n        dispatch(newProduct(persons));\n      })\n      .catch(() => dispatch(errorCart()));\n  };\n};\n\nexport const newProduct = (item) => {\n  // console.log(\"item\");\n  return {\n    type: NEW_PRODUCT,\n    item,\n  };\n};\n\nexport const errorCart = () => {\n  // console.log(\"12131\");\n  return {\n    type: ERROR_CART,\n  };\n};\n\nconst addCart = (state, payload) => {\n  const items = state.items;\n  let isProductExists = false;\n  items.map((item) => {\n    if (!isProductExists && item.id === payload.id) {\n      item.qty += payload.qty;\n      isProductExists = true;\n    }\n    return item;\n  });\n  const newItems = isProductExists ? items : [...items, payload];\n  localStorage.setItem(\"cart_items\", JSON.stringify(newItems));\n  return { ...state, items: newItems };\n};\n\nconst product = useSelector((state) => {\n  // console.log(state.Cart);\n  return state.Cart.items;\n});\n\nconst addToCart = () => {\n  if (product) {\n    const { id, title, image, price } = product;\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        title,\n        image,\n        price,\n        qty: 1,\n      },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}