{"ast":null,"code":"var _jsxFileName = \"/Users/phamtrungtuyen/Projective/project_001/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import axios from \"axios\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getCategories } from \"./servicers/Api\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxSetup/store\";\nimport Footer from \"./share/components/layout/footer\";\nimport Header from \"./share/components/layout/header\";\nimport Menu from \"./share/components/layout/menu\"; // import Sidebar from \"./share/components/layout/sidebar\";\n// import Slider from \"./share/components/layout/slider\";\n\nimport HomePage from \"./pages/Home\";\nimport CategoryPage from \"./pages/Category\";\nimport ProductDetailsPage from \"./pages/ProductDetails\";\nimport SearchPage from \"./pages/Search\";\nimport CartPage from \"./pages/Cart\";\nimport SuccessPage from \"./pages/Success\";\nimport NotFoundPage from \"./pages/NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [categories, setCategories] = React.useState([]);\n  React.useEffect(() => {\n    getCategories({}).then(res => {\n      setCategories(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        item: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/products/category/:id\",\n          component: CategoryPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/:id\",\n          component: ProductDetailsPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          component: SearchPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          component: CartPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/success\",\n          component: SuccessPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/phamtrungtuyen/Projective/project_001/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","getCategories","Provider","store","Footer","Header","Menu","HomePage","CategoryPage","ProductDetailsPage","SearchPage","CartPage","SuccessPage","NotFoundPage","App","categories","setCategories","useState","useEffect","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,IAAP,MAAiB,gCAAjB,C,CACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAApC;AACArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBjB,IAAAA,aAAa,CAAC,EAAD,CAAb,CAAkBkB,IAAlB,CAAwBC,GAAD,IAAS;AAC9BJ,MAAAA,aAAa,CAACI,GAAG,CAACC,IAAL,CAAb;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAElB,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEY;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,wBAAZ;AAAqC,UAAA,SAAS,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7BD;;GAAMC,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n// import axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getCategories } from \"./servicers/Api\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxSetup/store\";\n\nimport Footer from \"./share/components/layout/footer\";\nimport Header from \"./share/components/layout/header\";\nimport Menu from \"./share/components/layout/menu\";\n// import Sidebar from \"./share/components/layout/sidebar\";\n// import Slider from \"./share/components/layout/slider\";\n\nimport HomePage from \"./pages/Home\";\nimport CategoryPage from \"./pages/Category\";\nimport ProductDetailsPage from \"./pages/ProductDetails\";\nimport SearchPage from \"./pages/Search\";\nimport CartPage from \"./pages/Cart\";\nimport SuccessPage from \"./pages/Success\";\nimport NotFoundPage from \"./pages/NotFound\";\n\nconst App = () => {\n  const [categories, setCategories] = React.useState([]);\n  React.useEffect(() => {\n    getCategories({}).then((res) => {\n      setCategories(res.data);\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Menu item={categories} />\n        {/* <Sidebar />\n        <Slider /> */}\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/products/category/:id\" component={CategoryPage} />\n          <Route path=\"/product/:id\" component={ProductDetailsPage} />\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/success\" component={SuccessPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n\n        <Footer />\n      </Router>\n    </Provider>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}